[{"/Users/tammytruong/Code/USCukraine/USC_Website/src/index.js":"1","/Users/tammytruong/Code/USCukraine/USC_Website/src/App.js":"2","/Users/tammytruong/Code/USCukraine/USC_Website/src/reportWebVitals.js":"3","/Users/tammytruong/Code/USCukraine/USC_Website/src/interestForm.js":"4"},{"size":548,"mtime":1649275389070,"results":"5","hashOfConfig":"6"},{"size":2219,"mtime":1649897417869,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1649275389070,"results":"8","hashOfConfig":"6"},{"size":5044,"mtime":1649919331673,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"1a9gslx",{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"/Users/tammytruong/Code/USCukraine/USC_Website/src/index.js",[],[],["24","25"],"/Users/tammytruong/Code/USCukraine/USC_Website/src/App.js",["26","27"],[],"/Users/tammytruong/Code/USCukraine/USC_Website/src/reportWebVitals.js",[],[],"/Users/tammytruong/Code/USCukraine/USC_Website/src/interestForm.js",["28"],[],"import { render } from 'react-dom';\nimport React, { useState } from 'react';\nimport { Button, Form, Container, Header } from 'semantic-ui-react';\nimport './interestForm.css';\nimport axios from 'axios';\n\nclass InterestForm extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            Name: '',\n            Email: '',\n            CurrentResidence: '',\n            CurrentInstitution: '',\n            Position: '',\n            Interest: '',\n            USCDepartment: '',\n            Message: ''\n        }\n    }\n\n    // SUBMIT HANDLERS\n        changeHandler = (e) => {\n            this.setState({[e.target.name] : e.target.value})\n        }\n        submitHandler = e => {\n            e.preventDefault();\n            console.log(this.state);\n\n            axios.post('https://sheet.best/api/sheets/a185bc92-03fa-4be4-a316-a8a46ddd9e6f', this.state)\n            .then(response => {\n                console.log(response);\n            })\n            .catch((error) => {\n                if (error.response){\n                    console.log(error.response);\n                    }else if(error.request){\n                    console.log(error.request)\n                    }else if(error.message){\n                        console.log(error.message)\n                    }\n            })\n            this.setState ({\n                Name: '',\n                Email: '',\n                CurrentResidence: '',\n                CurrentInstitution: '',\n                Position: '',\n                Interest: '',\n                USCDepartment: '',\n                Message: ''\n        });\n    }\n\n    render() {\n        const { Name, Email, CurrentResidence, CurrentInstitution, Position, Interest, USCDepartment, Message} = this.state;\n        return (\n            <Container fluid className=\"form-container\">\n            <Header as='h2'>Interest Form</Header>\n            <Form className=\"interest-form\" onSubmit={this.submitHandler}>\n                <Form.Field className=\"form-field\">\n                    <label>Name</label>\n                    <input placeholder='Name' type=\"text\" name=\"Name\" value={Name} onChange={this.changeHandler} />\n                </Form.Field>\n                <Form.Field className=\"form-field\">\n                    <label>E-Mail</label>\n                    <input placeholder='E-mail' type=\"text\" name=\"Email\" value={Email} onChange={this.changeHandler} />\n                </Form.Field>\n                <Form.Field className=\"form-field\">\n                    <label>Current place/country of residence</label>\n                    <input placeholder='Residence' type=\"text\" name=\"CurrentResidence\" value={CurrentResidence} onChange={this.changeHandler} />\n                </Form.Field>\n                <Form.Field className=\"form-field\">\n                    <label>Current or most recent affiliation (institution)</label>\n                    <input placeholder='Institution' type=\"text\" name=\"CurrentInstitution\" value={CurrentInstitution} onChange={this.changeHandler} />\n                </Form.Field>\n\n                <Form.Field className=\"form-field\">\n                    <label>Current Position</label>\n                    <select value={Position} name=\"Position\" onChange={this.changeHandler} type=\"select\">\n                        <option value=\"\">Select a Position</option>\n                        <option value=\"faculty\">Faculty</option>\n                        <option value=\"postDoc\">PostDoctorate</option>\n                        <option value=\"phD\">PhD Student</option>\n                        <option value=\"masters\">Masters Student</option>\n                        <option value=\"undergrad\">Undergraduate Student</option>\n                        <option value=\"other\">Other</option>\n                    </select>\n                </Form.Field>\n\n                <Form.Field className=\"form-field\">\n                    <label>Your primary area(s) of interest</label>\n                    <input placeholder='Interests' type=\"text\" name=\"Interest\" value={Interest} onChange={this.changeHandler} />\n                </Form.Field>\n                <Form.Field className=\"form-field\">\n                    <label>Your primary choise of School/Department/Program at USC</label>\n                    <input placeholder='School/Department' type=\"text\" name=\"USCDepartment\" value={USCDepartment} onChange={this.changeHandler} />\n                </Form.Field>\n                <Form.Field className=\"form-field\">\n                    <label>Your Message</label>\n                    <textarea rows=\"3\" className=\"message-field\" placeholder='Please tell us a little about yourself and what kinds of opportunities you are looking for.' type=\"textarea\" name=\"Message\" value={Message} onChange={this.changeHandler} />\n                </Form.Field>\n                \n                <Button className=\"submit-button\" type='submit'>Submit</Button>\n            </Form>\n            </Container>\n        )\n    }\n}\n\nrender(<InterestForm />, document.getElementById(\"root\"));\nexport default InterestForm; \n",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":13,"column":13,"nodeType":"35","endLine":13,"endColumn":89},{"ruleId":"33","severity":1,"message":"34","line":14,"column":13,"nodeType":"35","endLine":14,"endColumn":83},{"ruleId":"36","severity":1,"message":"37","line":2,"column":17,"nodeType":"38","messageId":"39","endLine":2,"endColumn":25},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]