[{"/Users/tammytruong/Code/USC_Website/src/index.js":"1","/Users/tammytruong/Code/USC_Website/src/App.js":"2","/Users/tammytruong/Code/USC_Website/src/reportWebVitals.js":"3","/Users/tammytruong/Code/USC_Website/src/interestForm.js":"4","/Users/tammytruong/Code/USC_Website/src/formPopup.js":"5","/Users/tammytruong/Code/USC_Website/src/formTest.js":"6"},{"size":548,"mtime":1650906865635,"results":"7","hashOfConfig":"8"},{"size":8058,"mtime":1650917899187,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1650906865635,"results":"10","hashOfConfig":"8"},{"size":5306,"mtime":1650919347867,"results":"11","hashOfConfig":"8"},{"size":1171,"mtime":1650918887919,"results":"12","hashOfConfig":"8"},{"size":7335,"mtime":1650917386048,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"195rwp9",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"29"},"/Users/tammytruong/Code/USC_Website/src/index.js",[],[],"/Users/tammytruong/Code/USC_Website/src/App.js",[],[],"/Users/tammytruong/Code/USC_Website/src/reportWebVitals.js",[],[],"/Users/tammytruong/Code/USC_Website/src/interestForm.js",[],[],"/Users/tammytruong/Code/USC_Website/src/formPopup.js",[],[],["34","35"],"/Users/tammytruong/Code/USC_Website/src/formTest.js",["36","37","38"],[],"import { render } from 'react-dom';\nimport React, {  } from 'react';\nimport { Button, Form, Container } from 'semantic-ui-react';\nimport './interestForm.css';\nimport axios from 'axios';\n\n\n\nimport Snackbar from '@mui/material/Snackbar';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport './interestForm.css';\n\n\n//POPUP MESSAGE\n// export function PopupMessage() {\n//     const [open, setOpen] = React.useState(false);\n\n//     const handleClick = () => {\n//         setOpen(true);\n//       };\n    \n//     const handleClose = (event, reason) => {\n//         if (reason === 'clickaway') {\n//           return;\n//         }\n    \n//         setOpen(false);\n//     };\n\n//     const action = (\n//         <React.Fragment>\n//             <IconButton\n//             size=\"small\"\n//             aria-label=\"close\"\n//             color=\"inherit\"\n//             onClick={handleClose}\n//             >\n//             <CloseIcon fontSize=\"small\" />\n//             </IconButton>\n//         </React.Fragment>\n//     );\n\n//     return (\n        // <div>\n        // <Snackbar\n        //     open={open}\n        //     autoHideDuration={3000}\n        //     onClose={handleClose}\n        //     message=\"Your form has been submitted. A representative from USC will get back to you shortly.\"\n        //     action={action}\n        // />\n        // </div>\n//     )\n\n// }\n\nclass Testing extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            Name: '',\n            Email: '',\n            CurrentResidence: '',\n            CurrentInstitution: '',\n            Position: '',\n            Interest: '',\n            USCDepartment: '',\n            Message: ''\n        }\n    }\n\n    // SUBMIT HANDLERS\n    changeHandler = (e) => {\n        this.setState({[e.target.name] : e.target.value})\n    }\n    submitHandler = e => {\n        e.preventDefault();\n        console.log(this.state);\n\n        axios.post('https://sheet.best/api/sheets/a185bc92-03fa-4be4-a316-a8a46ddd9e6f', this.state)\n        .then(response => {\n            console.log(response);\n        })\n        \n        .catch((error) => {\n            if (error.response){\n                console.log(error.response);\n            }else if(error.request){\n                console.log(error.request)\n            }else if(error.message){\n                console.log(error.message)\n            }\n        })\n        this.setState ({\n            Name: '',\n            Email: '',\n            CurrentResidence: '',\n            CurrentInstitution: '',\n            Position: '',\n            Interest: '',\n            USCDepartment: '',\n            Message: ''\n    });\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleClick = () => {\n        setOpen(true);\n      };\n    \n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n          return;\n        }\n    \n        setOpen(false);\n    };\n\n    const action = (\n        <React.Fragment>\n            <IconButton\n            size=\"small\"\n            aria-label=\"close\"\n            color=\"inherit\"\n            onClick={handleClose}\n            >\n            <CloseIcon fontSize=\"small\" />\n            </IconButton>\n        </React.Fragment>\n    );\n    }\n    \n\n    render() {\n        const { Name, Email, CurrentResidence, CurrentInstitution, Position, Interest, USCDepartment, Message} = this.state;\n        \n        return (\n            <Container fluid className=\"form-container\">\n            <Form className=\"interest-form\" onSubmit={this.submitHandler}>\n                <Form.Field className=\"form-field\">\n                    <label>Name</label><br />\n                    <input placeholder='Name' type=\"text\" name=\"Name\" value={Name} onChange={this.changeHandler} required />\n                </Form.Field>\n                <Form.Field className=\"form-field\">\n                    <label>E-Mail</label><br />\n                    <input placeholder='E-mail' type=\"text\" name=\"Email\" value={Email} onChange={this.changeHandler} required />\n                </Form.Field>\n                <Form.Field className=\"form-field\">\n                    <label>Current place/country of residence</label><br />\n                    <input placeholder='Residence' type=\"text\" name=\"CurrentResidence\" value={CurrentResidence} onChange={this.changeHandler} required />\n                </Form.Field>\n                <Form.Field className=\"form-field\">\n                    <label>Current or most recent affiliation (institution)</label><br />\n                    <input placeholder='Institution' type=\"text\" name=\"CurrentInstitution\" value={CurrentInstitution} onChange={this.changeHandler} required/>\n                </Form.Field>\n\n                <Form.Field className=\"form-field\">\n                    <label>Current position</label><br />\n                    <select value={Position} name=\"Position\" onChange={this.changeHandler} type=\"select\" class=\"position\" required>\n                        <option value=\"\">Select a Position</option>\n                        <option value=\"faculty\">Faculty</option>\n                        <option value=\"postDoc\">PostDoctorate</option>\n                        <option value=\"phD\">PhD Student</option>\n                        <option value=\"masters\">Masters Student</option>\n                        <option value=\"undergrad\">Undergraduate Student</option>\n                        <option value=\"other\">Other</option>\n                    </select>\n                </Form.Field>\n\n                <Form.Field className=\"form-field\">\n                    <label>Your primary area(s) of interest</label><br />\n                    <input placeholder='Interests' type=\"text\" name=\"Interest\" value={Interest} onChange={this.changeHandler} required />\n                </Form.Field>\n                <Form.Field className=\"form-field\">\n                    <label>Your primary choice of School/Department/Program at USC</label><br />\n                    <input placeholder='School/Department' type=\"text\" name=\"USCDepartment\" value={USCDepartment} onChange={this.changeHandler} required/>\n                </Form.Field>\n                <Form.Field className=\"form-field\">\n                    <label>Message</label><br />\n                    <textarea rows=\"3\" className=\"message-field\" \n                        placeholder='Please tell us a little about yourself and what kinds of opportunities you are looking for. If you answered \"None\" or \"Other\" for any of the questions above, please explain here.' \n                        type=\"textarea\" name=\"Message\" value={Message} onChange={this.changeHandler} required/>\n                </Form.Field>\n                \n\n                <Button className=\"submit-button\" type='submit' onClick={this.handleClick}>Submit</Button>\n                <div>\n                <Snackbar\n                    open={this.open}\n                    autoHideDuration={3000}\n                    onClose={this.handleClose}\n                    message=\"Your form has been submitted. A representative from USC will get back to you shortly.\"\n                    action={this.action}\n                />\n                </div>\n                \n\n            </Form>\n            </Container>\n        )\n    }\n}\n\nrender(<Testing />, document.getElementById(\"root\"));\nexport default Testing; \n",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":107,"column":12,"nodeType":"45","messageId":"46","endLine":107,"endColumn":16},{"ruleId":"43","severity":1,"message":"47","line":109,"column":11,"nodeType":"45","messageId":"46","endLine":109,"endColumn":22},{"ruleId":"43","severity":1,"message":"48","line":121,"column":11,"nodeType":"45","messageId":"46","endLine":121,"endColumn":17},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'open' is assigned a value but never used.","Identifier","unusedVar","'handleClick' is assigned a value but never used.","'action' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]